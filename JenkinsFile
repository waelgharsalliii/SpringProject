pipeline{
    agent any



    stages {


        stage('Getting project from Git') {
            steps{
      			checkout([$class: 'GitSCM', branches: [[name: '*/main']],
			extensions: [],
			userRemoteConfigs: [[url: 'github.com/waelgharsalliii/SpringProject.git']]])
            }
        }


       stage('Cleaning the project') {
            steps{
                	sh "mvn -B -DskipTests clean  "
            }
        }



        stage('Artifact Construction') {
            steps{
                	sh "mvn -B -DskipTests package "
            }
        }



        stage('SONARQUBE') {
            steps{

             		mvn clean verify sonar:sonar \-Dsonar.projectKey=Devops_Project -Dsonar.projectName='Devops_Project' -Dsonar.host.url=http://192.168.1.22:9000 -Dsonar.token=sqp_ffb53403c75d7afa1829ffb8197acfd7cd47b433
            }
        }


        stage('Publish to Nexus') {
            steps {


                sh 'mvn deploy'
               }

            }

            	stage('Build Docker Image') {
                                  steps {
                                      script {
                                        sh 'docker build -t waelgharsalli/devops_project:wael .'
                                              }
                                  }
                              }

                              stage('login dockerhub') {
                                                    steps {

            				sh 'docker login -u waelgharsalli --password dckr_pat_Wy5ngfj1a9nX7YTCP2KBktHgq1o'
                                                        }
            		          }

            	                      stage('Push Docker Image') {
                                                    steps {
                                               sh 'docker push waelgharsalli/devops_project:wael'
                                                        }

            		  }
            		  }
            		  }






















}


    /*    post {
		success{
		mail bcc: '', body: '''Dear Houssem Toumi,
we are happy to inform you that your pipeline build was successful.
Great work !
-Jenkins Team-''', cc: '', from: 'houssem.toumi@@esprit.tn', replyTo: '', subject: 'Build Finished - Success', to: 'houssem.toumi@@esprit.tn'
		}

		failure{
mail bcc: '', body: '''Dear  Houssem Toumi,
we are sorry to inform you that your pipeline build failed.
Keep working !
-Jenkins Team-''', cc: '', from: 'houssem.toumi@@esprit.tn', replyTo: '', subject: 'Build Finished - Failure', to: 'houssem.toumi@@esprit.tn'
		}

       always {
		emailext attachLog: true, body: '', subject: 'Build finished',from: 'houssem.toumi@@esprit.tn' , to: 'houssem.toumi@@esprit.tn'
            cleanWs()
       }
    }

*/

}
